stages:
  - build
  - package

# prevent duplicate pipelines for merge request
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

variables:
  LINUX_RUSTIMG: "rust:buster"

.build-template:
  stage: build
  script:
    - cargo build ${FEATURES} ${CARGO_FLAGS}

.debian-build-template:
  extends:
    - .build-template
  image: ${LINUX_RUSTIMG}
  before_script:
    - apt-get update
    - apt-get install -y llvm-dev clang libxen-dev

.cross-build-template:
  extends:
    - .build-template
  image: ghcr.io/cross-rs/$CARGO_BUILD_TARGET:main
  before_script:
    # install Rust
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path
    - . "$HOME/.cargo/env"
    - rustup target add $CARGO_BUILD_TARGET

.cross-freebsd12-x86_64-build-template:
  extends:
    - .cross-build-template
  variables:
    CARGO_BUILD_TARGET: "x86_64-unknown-freebsd"
    CROSS_SYSROOT: "/usr/local/x86_64-unknown-freebsd12"
  before_script:
    - !reference [.cross-build-template,before_script]
    # cross sysroot does not match its toolchain
    - mkdir -p $CROSS_SYSROOT/usr
    - ln -s ../include $CROSS_SYSROOT/usr/include
    - ln -s ../lib $CROSS_SYSROOT/usr/lib
    # build dependencies
    - PKG=$(./devscripts/freebsd-fetch-package.sh xen-tools)
    - tar -C $CROSS_SYSROOT/ --xform s,^/usr/local/,/usr/, -xf $PKG

.scheduled:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

.not-scheduled:
  rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"

## common defs

.featurematrix:
  parallel:
    matrix:
      - FEATURES:
          - ""
          - "--no-default-features"
          - "--no-default-features -F xenstore"
          - "--no-default-features -F net_netlink"
          - "--no-default-features -F net_pnet"

.featurematrix.no-netlink:
  parallel:
    matrix:
      - FEATURES:
          - "--no-default-features"
          - "--no-default-features -F xenstore"
          - "--no-default-features -F net_pnet"
          - "--no-default-features -F xenstore,net_pnet"

## standard jobs building with shipped Cargo.lock

build-linux:
  parallel: !reference [.featurematrix,parallel]
  extends:
    - .debian-build-template
    - .not-scheduled
  variables:
    CARGO_FLAGS: "-v"

build-release-linux-x86_64:
  extends:
    - .debian-build-template
    - .not-scheduled
  variables:
    FEATURES: ""
    CARGO_FLAGS: "--release"
  artifacts:
    paths:
      - target/release/xen-guest-agent

build-freebsd12-x86_64:
  extends:
    - .cross-freebsd12-x86_64-build-template
    - .not-scheduled
  variables:
    CARGO_FLAGS: "-v"
  parallel: !reference [.featurematrix.no-netlink,parallel]

build-release-freebsd12-x86_64:
  extends:
    - .cross-freebsd12-x86_64-build-template
    - .not-scheduled
  variables:
    FEATURES: "--no-default-features -F xenstore,net_pnet"
    CARGO_FLAGS: "--release"
  artifacts:
    paths:
      - target/x86_64-unknown-freebsd/release/xen-guest-agent

## continuous checking against most recent dependencies

build-latest-linux:
  parallel: !reference [.featurematrix,parallel]
  extends:
    - .debian-build-template
    - .scheduled
  before_script:
    - !reference [".debian-build-template", "before_script"]
    - mv Cargo.lock Cargo.lock.current
  after_script:
    # show which dependencies changed in Cargo.lock
    - git diff

## packaging from binary artifacts

deb-amd64:
  stage: package
  image: "debian:10"
  needs:
    - build-release-linux-x86_64
  before_script:
    - apt update
    - apt install -y build-essential debhelper
    - dpkg-checkbuilddeps
    - 'VERSION=$(grep "^version =" Cargo.toml | cut -d\" -f2 | tr "-" "~")'
  script:
    - >-
      sed < debian/changelog.in > debian/changelog
      -e "s/@@VERSION@@/$VERSION/"
      -e "s/@@AUTHOR@@/$GITLAB_USER_NAME <$GITLAB_USER_EMAIL>/"
      -e "s/@@DATE@@/$(date --rfc-822)/"
    - fakeroot debian/rules binary AGENT_BINARY="target/release/xen-guest-agent"
    - mv -v ../*.deb target/release/
  artifacts:
    paths:
      - target/release/*.deb

rpm-x86_64:
  stage: package
  image: "fedora:37"
  needs:
    - build-release-linux-x86_64
  before_script:
    - dnf install -y rpm-build dnf-utils
    - mkdir SOURCES
    - ln -sr target/release/xen-guest-agent SOURCES/
    - ln -sr startup/xen-guest-agent.service SOURCES/
    - 'UPSTREAMVERSION=$(grep "^version =" Cargo.toml | cut -d\" -f2)'
    - 'VERSION=$(echo $UPSTREAMVERSION | tr "-" "~")'
    - >-
      sed  < xen-guest-agent.spec.in > xen-guest-agent.spec
      -e "s/@@UPSTREAMVERSION@@/$UPSTREAMVERSION/"
      -e "s/@@VERSION@@/$VERSION/"
      -e "s/@@AUTHOR@@/$GITLAB_USER_NAME <$GITLAB_USER_EMAIL>/"
      -e "s/@@DATE@@/$(date +"%a %b %d %Y")/"
    - dnf builddep xen-guest-agent.spec -y
  script:
    - 'rpmbuild -bb xen-guest-agent.spec --define "_topdir $(pwd)"'
  artifacts:
    paths:
      - RPMS/*/*.rpm
